[gd_scene load_steps=2 format=3 uid="uid://bcmdpvny8bj2p"]

[sub_resource type="GDScript" id="GDScript_grmqm"]
script/source = "extends TextureRect

var img : Image
var dimension: Vector2i
@onready var spin_x: SpinBox = $'../spin_x'
@onready var spin_y: SpinBox = $'../spin_y'

var gray_v :PackedFloat64Array= []

var hue_v :PackedFloat64Array= []
@onready var saturation: HSlider = $'../saturation'
var light_v :PackedFloat64Array= []

func _ready() -> void:
	dimension.x = 8; dimension.y = 16;
	img = Image.create(dimension.x*2, dimension.y, false,Image.FORMAT_RGB8)
	gen_values(); gen_image()


func gen_values():
	gray_v.clear(); hue_v.clear(); light_v.clear();

	gray_v.append(1)
	for x in range(1,dimension.x):
		gray_v.append(1 - (x * (1.0/(dimension.x-1))))

	for y in range(0,dimension.y):
		hue_v.append(y * (1.0/dimension.y) + (1.0/dimension.y))

	#for x in range(1,dimension.x+1):
		#light_v.append(x * (1.0/(dimension.x+1)))
	light_v.append(.05)
	light_v.append(.114583)
	light_v.append(.25)
	light_v.append(.416667)
	light_v.append(.583333)
	light_v.append(.75)
	light_v.append(.8854167)
	light_v.append(.95)

func gen_image():
	for x in range(0, dimension.x):
		var col := Color.from_ok_hsl(0, 0, gray_v[x] )
		for y in range(0, dimension.y):
			img.set_pixel(x, y, col)

	for x in range(0, dimension.x):
		for y in range(0, dimension.y):
			var col := Color.from_ok_hsl(hue_v[y], saturation.value, light_v[x] )
			img.set_pixel(dimension.x+x, y, col)

	self.texture = ImageTexture.create_from_image(img)


func _on_saturation_value_changed(_value: float) -> void:
	gen_image()

func _on_spin_x_value_changed(value: float) -> void:
	var v := roundi(value)
	if v == 0:
		spin_x.value = 2; return
	dimension.x = roundi(value/2)
	img.resize(dimension.x*2, dimension.y)
	gen_values(); gen_image()

func _on_spin_y_value_changed(value: float) -> void:
	var v := roundi(value)
	if v == 0:
		spin_y.value = 2; return
	dimension.y = v
	img.resize(dimension.x*2, dimension.y)
	gen_values(); gen_image()


func _on_save_image_pressed() -> void:
	img.save_png('./img.png')
"

[node name="Control" type="Control"]
custom_minimum_size = Vector2(768, 768)
layout_mode = 3
anchors_preset = 13
anchor_left = 0.5
anchor_right = 0.5
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="TextureRect" type="TextureRect" parent="."]
custom_minimum_size = Vector2(448, 448)
layout_mode = 0
offset_left = 3.0
offset_top = 4.0
offset_right = 464.0
offset_bottom = 760.0
stretch_mode = 4
script = SubResource("GDScript_grmqm")

[node name="ColorPicker" type="ColorPicker" parent="."]
layout_mode = 1
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -298.0
offset_bottom = 576.0
grow_horizontal = 0
color = Color(0.831373, 0.14902, 0.305882, 1)

[node name="saturation" type="HSlider" parent="."]
layout_mode = 1
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -293.0
offset_top = 633.0
offset_right = 1.0
offset_bottom = 649.0
grow_horizontal = 0
max_value = 1.0
step = 0.1
value = 0.9
tick_count = 11
ticks_on_borders = true

[node name="Label" type="Label" parent="saturation"]
layout_mode = 0
offset_left = 6.0
offset_top = -23.0
offset_right = 87.0
text = "Saturation"

[node name="spin_x" type="SpinBox" parent="."]
layout_mode = 0
offset_left = 476.0
offset_top = 659.0
offset_right = 559.062
offset_bottom = 690.0
step = 2.0
value = 16.0
rounded = true
allow_greater = true
prefix = "X:"
select_all_on_focus = true

[node name="spin_y" type="SpinBox" parent="."]
layout_mode = 0
offset_left = 565.0
offset_top = 659.0
offset_right = 648.062
offset_bottom = 690.0
step = 2.0
value = 16.0
rounded = true
allow_greater = true
prefix = "Y:"
select_all_on_focus = true

[node name="save_image" type="Button" parent="."]
layout_mode = 2
offset_left = 669.0
offset_top = 659.0
offset_right = 764.0
offset_bottom = 690.0
text = "save image
"

[connection signal="value_changed" from="saturation" to="TextureRect" method="_on_saturation_value_changed"]
[connection signal="value_changed" from="spin_x" to="TextureRect" method="_on_spin_x_value_changed"]
[connection signal="value_changed" from="spin_y" to="TextureRect" method="_on_spin_y_value_changed"]
[connection signal="pressed" from="save_image" to="TextureRect" method="_on_save_image_pressed"]
